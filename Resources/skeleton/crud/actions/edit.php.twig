
    /**
     * Displays a form to edit an existing {{ entity }} entity or create a new one.
     *
     * @param integer ${{ entity_var }}Id The id of the {{ entity }} to edit
     * @param Request $request
{% if 'annotation' == format %}
     *
     * @Route("/{id}/edit", name="{{ route_prefix }}_edit")
     * @Template()
{% endif %}
     *
     * @return RedirectResponse|Response
     */
    public function editAction(${{ entity_var }}Id, Request $request)
    {
        ${{ entity_var }} = $this->{{ entity_var }}Repository->find(${{ entity_var }}Id);

        if (false == ${{ entity_var }}) {
            ${{ entity_var }} = $this->initEntity(new {{ entity_class }}());
        }

        $this->getCore()->addNavigationElement(${{ entity_var }});

        $form = $this->createForm(new {{ entity_class }}Type(), ${{ entity_var }});

        if ('POST' == $request->getMethod()) {

            $form->submit($request);

            if ($form->isValid()) {

                $this->getEm()->persist(${{ entity_var }});
                $this->getEm()->flush();

                $this->addFlashSuccess($this->get('translator')->trans('%entity% has been saved.', array('%entity%' => ${{ entity_var }})));

                if ($request->request->has('save')) {
                    return $this->redirect($this->generateUrl('{{ route_prefix }}'));
                }

                return $this->redirect($this->generateUrl(${{ entity_var }}->getRoute(), ${{ entity_var }}->getRouteParams()));
            } else {
                $this->addFlashError('Some fields are invalid.');
            }
        }

        return $this->render('{{ namespace|replace({'\\': ''}) ~ ':' ~ application ~ '/' ~ entity_class ~ '/' ~ entity|replace({'\\': '/'}) }}:edit.html.twig', array(
            '{{ twig_entity_var }}' => ${{ entity_var }},
            'form' => $form->createView()
        ));
    }
