<?php

namespace {{ namespace }}{{ entity_namespace ? '\\' ~ entity_namespace : '' }};

use Flexy\SystemBundle\Lib\BaseEntity;
use Flexy\DoctrineBehaviorsBundle\Model as FlexyORMBehaviors;

/**
 * {{ entity }} Entity
 */
class {{ entity }} extends BaseEntity
{
    {%- if is_timestampable %}

    use FlexyORMBehaviors\Timestampable\Timestampable;
    {%- endif %}

    {%- if is_sluggable %}

    use FlexyORMBehaviors\Sluggable\Sluggable;
    {%- endif %}

    {%- if has_i18n %}

    use FlexyORMBehaviors\Translatable\Translatable;
    {%- endif %}


    public function __toString()
    {
        if (false == $this->id) {
            return 'New {{ entity }}';
        }

        if ($name = {{ name_function }}) {
            return $name;
        }

        return '';
    }

    /**
     * Get the backend route
     *
     * @param string $suffix
     *
     * @return string
     */
    public function getRouteBackend($suffix = 'edit')
    {
        return '{{ route ~ '_' }}' . $suffix;
    }

    /**
     * Get params for the backend route
     *
     * @param array $params Additional parameters
     *
     * @return array
     */
    public function getRouteBackendParams($params = array())
    {
        $defaults = array(
            'id' => $this->id ? $this->id : 0,
        );

        $params = array_merge($defaults, $params);

        return $params;
    }

{{ code }}

    {%- if sluggable_name %}

    /**
     * Get Sluggable Fields
     *
     * @return array
     */
    public function getSluggableFields()
    {
        return array('name');
    }
    {%- endif %}

}
